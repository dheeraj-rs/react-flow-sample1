.flow-editor-container {
  width: 100%;
  height: 100vh;
  position: relative;
  background-color: var(--color-background);
  overflow: hidden;
  display: flex;
  flex-direction: column;

  @media (max-width: 768px) {
    height: calc(100vh - 60px);
  }
}

.flow-editor-header {
  padding: var(--spacing-md);
  background-color: white;
  border-bottom: var(--border-width) solid var(--color-node-border);
  display: flex;
  justify-content: space-between;
  align-items: center;
  z-index: 10;
  height: 64px;

  h1 {
    font-size: 1.5rem;
    font-weight: 600;
    margin: 0;
    color: var(--color-foreground);

    @media (max-width: 768px) {
      font-size: 1.25rem;
    }
  }

  button {
    padding: 8px 16px;
    background-color: var(--color-primary);
    color: white;
    border-radius: var(--border-radius-md);
    font-weight: 500;
    transition: all var(--transition-fast);

    &:hover {
      background-color: var(--color-primary-dark);
    }

    @media (max-width: 768px) {
      padding: 6px 12px;
      font-size: 0.875rem;
    }
  }
}

.flow-editor-wrapper {
  flex: 1;
  position: relative;
  min-height: 0;
}

.react-flow {
  width: 100%;
  height: 100%;
  background-color: var(--color-background);
}

.controls-custom {
  position: absolute;
  top: var(--spacing-md);
  right: var(--spacing-md);
  background-color: var(--color-control-background);
  border-radius: var(--border-radius-md);
  box-shadow: var(--shadow-md);
  display: flex;
  flex-direction: column;
  border: var(--border-width) solid var(--color-node-border);
  z-index: 10;
  animation: fadeIn var(--transition-normal);
  
  @media (max-width: 768px) {
    top: auto;
    bottom: var(--spacing-md);
    right: var(--spacing-md);
  }
  
  .control-button {
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: var(--color-control-background);
    color: var(--color-foreground);
    border: none;
    border-bottom: var(--border-width) solid var(--color-node-border);
    transition: all var(--transition-fast);
    
    &:hover {
      background: var(--color-control-hover);
      color: var(--color-primary);
    }
    
    &:active {
      background: var(--color-control-active);
    }
    
    &:last-child {
      border-bottom: none;
    }
    
    &.delete {
      &:hover {
        color: var(--color-error);
      }
    }

    @media (max-width: 768px) {
      width: 36px;
      height: 36px;
    }
  }
}

.auto-arrange-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.05);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 100;
  animation: fadeIn var(--transition-normal);
  
  .indicator {
    background-color: white;
    padding: var(--spacing-md) var(--spacing-lg);
    border-radius: var(--border-radius-md);
    box-shadow: var(--shadow-lg);
    display: flex;
    align-items: center;
    gap: var(--spacing-md);
    animation: scaleIn var(--transition-normal);
    
    span {
      font-weight: 500;
    }
  }
}

.status-bar {
  position: absolute;
  bottom: var(--spacing-md);
  left: var(--spacing-md);
  padding: var(--spacing-sm) var(--spacing-md);
  background-color: var(--color-control-background);
  border-radius: var(--border-radius-md);
  box-shadow: var(--shadow-md);
  display: flex;
  align-items: center;
  gap: var(--spacing-md);
  font-size: 0.85rem;
  color: var(--color-muted);
  border: var(--border-width) solid var(--color-node-border);
  z-index: 10;
  animation: slideInUp var(--transition-normal);
  
  @media (max-width: 768px) {
    display: none;
  }
  
  .status-item {
    display: flex;
    align-items: center;
    gap: var(--spacing-xs);
  }
}

.react-flow__minimap {
  display: none;
}

.react-flow__controls {
  display: none;
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes scaleIn {
  from {
    transform: scale(0.9);
    opacity: 0;
  }
  to {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes slideInUp {
  from {
    transform: translateY(10px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}